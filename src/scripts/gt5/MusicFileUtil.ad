

//---------------------------------------------------------------------------------------
// MusicFileUtil.ad
//
// Utility module for retrieving music metadata from the save instance.
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module MusicFileUtil
{
    static TABLE_VERSION = 100;

    function getGenreList(artist, params)
    {
        var instance = getInstance();
        return instance.getGenreList(artist, params);
    }

    function getLibraryList(artist, genre, order, by)
    {
        var instance = getInstance();
        var condition = "WHERE hidden = 0" + (genre == nil ? "" : " AND genre = '%s'".format(pdistd::MSqlite::EscapeString(genre)));

        return instance.getList(condition, order, by);
    }

    function getRaceBgmList(artist, genre, order, by)
    {
        var instance = getInstance();
        var condition = getListCondition(artist, genre);
        condition += " AND race_bgm = 1";
        return instance.getList(condition, order, by);
    }

    function getMenuBgmList(artist, genre, order, by)
    {
        var instance = getInstance();
        var condition = getListCondition(artist, genre);
        condition += " AND menu_bgm = 1";
        return instance.getList(condition, order, by);
    }

    function getSlideShowBgmList(artist, genre, order, by)
    {
        var instance = getInstance();
        var condition = getListCondition(artist, genre);
        condition += " AND slideshow_bgm = 1";
        return instance.getList(condition, order, by);
    }

    function getDefaultRaceBgmList(order, by)
    {
        var instance = getInstance();
        return instance.getList("WHERE hidden = 0 AND d_race_bgm = 1", order, by);
    }

    function getDefaultMenuBgmList(order, by)
    {
        var instance = getInstance();
        return instance.getList("WHERE hidden = 0 AND d_menu_bgm = 1", order, by);
    }

    function getDefaultSlideShowBgmList(order, by)
    {
        var instance = getInstance();
        return instance.getList("WHERE hidden = 0 AND d_slideshow_bgm = 1", order, by);
    }

    function getBgmListByUnlockType(unlock_type)
    {
        var instance = getInstance();
        return instance.getList("WHERE unlock_type = %d".format(unlock_type));
    }

    function setRaceBgm(id, race_bgm)
    {
        var instance = getInstance();
        instance.update(id, "race_bgm", race_bgm ? 1 : 0);
    }

    function setMenuBgm(id, menu_bgm)
    {
        var instance = getInstance();
        instance.update(id, "menu_bgm", menu_bgm ? 1 : 0);
    }

    function setSlideShowBgm(id, slideshow_bgm)
    {
        var instance = getInstance();
        instance.update(id, "slideshow_bgm", slideshow_bgm ? 1 : 0);
    }

    function setRaceBgmByList(id_list, race_bgm)
    {
        var instance = getInstance();
        instance.updateByList(id_list, "race_bgm", race_bgm ? 1 : 0);
    }

    function setMenuBgmByList(id_list, menu_bgm)
    {
        var instance = getInstance();
        instance.updateByList(id_list, "menu_bgm", menu_bgm ? 1 : 0);
    }

    function setSlideShowBgmByList(id_list, slideshow_bgm)
    {
        var instance = getInstance();
        instance.updateByList(id_list, "slideshow_bgm", slideshow_bgm ? 1 : 0);
    }

    function setHiddenByList(id_list, hidden)
    {
        var instance = getInstance();
        instance.updateByList(id_list, "hidden", hidden ? 1 : 0);
    }

    function getInstance()
    {
        return main::GAME_STATUS.user_profile.music;
    }
}