

//---------------------------------------------------------------------------------------
// CommandAlias.ad
//
// 
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module CommandAlias
{
    static sCount = 0;
    static sHash = nil;

    function obtain_alias(hash, file)
    {
        var st = main::pdistd::ReadFile(file);
        if (st["result"] != main::pdistd::FileError::OK)
            return;

        var buf = st["buffer"].toString();
        var lines;
        if (buf.find("\r\n") > 0)
            lines = buf.split("\r\n");
        else
            lines = buf.split("\n");

        foreach (var line in lines)
        {
            if (line.beginsWith("#"))
                continue;

            var cols = line.split(" ");
            if (cols.size < 3)
                continue;

            var type;
            if (cols[2] == "TXT")
                type = 0;
            else
                type = 1;

            hash[cols[0]] = [cols[1], type];
        } 
    }

    function begin()
    {
        if (sCount == 0)
        {
            sHash = [:];
            obtain_alias(sHash, "/scene/list/GT5.txt");
        }

        sCount++;
    }

    function end()
    {
        sCount--;

        if (sCount == 0)
            sHash = nil;
    }

    function get(alias)
    {
        if (sHash == nil)
            return nil;

        var second = sHash[alias];
        if (second == nil)
            return nil;
        else
        {
            var str = second[1] == 0 ? ("loadCommandFile code:" + second[0]) : ("loadSchedule code:" + second[0]);
            return str;
        }
    }

    function getCode(alias)
    {
        if (sHash == nil)
            return nil;

        var second = sHash[alias];
        if (second == nil)
            return nil;
        else
            return second[0];
    }
}