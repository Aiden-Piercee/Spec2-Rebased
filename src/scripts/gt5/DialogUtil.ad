

//---------------------------------------------------------------------------------------
// DialogUtil.ad
//
// Utility module for display various built-in dialogs.
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

#define DIALOG_PROJECT "dialog_project"

module DialogUtil
{
    static OK = 0;
    static ERROR = 1;
    static QUERY = 2;
    static YESNO = 3;
    static DEFAULT_NO = 4;
    static YESNOCLOSE = 5;

    static RESULT_CANCEL = 0;
    static RESULT_YES = 1;
    static RESULT_NO = 2;
    static RESULT_CLOSE = 4;

    function openConfirmDialogAutoClose(context, type, message, title)
    {
        return openConfirmDialog(context, type, message, title, nil, nil, true);
    }

    function openConfirmDialog(context, type, message, title, yes, no, auto_close)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmDialog"];
        if (page != nil)
            return page["OpenDialog"](context, type, message, title, nil, yes, no, nil, auto_close);
        return false;
    }

    function sayYesConfirmDialog(context)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmDialog"];
        if (page != nil)
            page["ActivateOKButton"](context);
    }

    function cancelConfirmDialog(context)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmDialog"];
        if (page != nil)
            return page["ForceCancel"](context);

        return false;
    }

    function setConfirmDialogActivateSound(name)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmDialog"];
        if (page != nil)
        {
            var func = page["SetActivateSound"];
            if (func != nil)
                func(name);
        }
    }

    function get_progress_page()
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmDialog"];
        if (page == nil)
            return nil;

        return page;
    }

    function openProgressDialog(context, message_begin, message_success, message_failed, func, arg, icon_path, hide_start, message_aborted)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["OpenDialog"](context, message_begin, message_success, message_failed, func, arg, icon_path, hide_start, message_aborted);
    }

    function closeProgressDialog(context, no_enter)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["CloseDialog"](context, no_enter);
    }

    function getProgress(context)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["GetProgress"](context);
    }

    function setProgress(context, progress)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetProgress"](context, progress);
    }

    function setProgressMessage(context, message)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetMessage"](context, message);
    }

    function setProgressRawMode(context, mode)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetRawMode"](context, mode);
    }

    function setProgressCancelCB(context, func, text)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetCancelCB"](context, func, text);
    }

    function setProgressCompleteCB(context, func)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetCompleteCB"](context, func);
    }

    function setRemainSecond(context, remain_second)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetRemainSecond"](context, remain_second);
    }

    function setProgressLabel(context, text)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetProgressLabel"](context, text);
    }

    function appearProgressDialog(context)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["AppearDialog"](context);
    }

    function setProgressOKButton(context)
    {
        var page = get_progress_page(context);
        if (page != nil)
            return page["SetOKButton"](context);
    }

    function openServerSelectDialog(context, region_list)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ServerSelectDialog"];
        if (page != nil)
            return page["open"](context, region_list);
    }

    function openConfirmExecDialog(context, message_begin, message_waiting, message_success, message_failed, func, arg, end_time_sec, no_progress)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["ConfirmExecDialog"];
        if (page != nil)
            return page["OpenDialog"](context, message_begin, message_waiting, message_success, message_failed, func, arg, end_time_sec, no_progress);
    }

    function openInformationDialog(context, message, title, image_path, gpb_path_and_gpb_name, load_image_from_disk)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["InformationDialog"];
        if (page != nil)
            return page["open"](context, message, title, image_path, gpb_path_and_gpb_name, load_image_from_disk);
    }

    function openDimmerDialog(context)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["DimmerDialog"];
        if (page != nil)
            page["open"](context);
    }

    function closeDimmerDialog(context)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["DimmerDialog"];
        if (page != nil)
            page["close"](context);
    }

    function openPrizeAspecExpDialog(context, exp, and_apply = true, display_bonus_precent, visible_trophies, without_dialog)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["PrizeDialog"];
        if (page != nil)
            return page["openPrizeAspecExpDialog"](context, [exp, and_apply, display_bonus_precent, visible_trophies], without_dialog);
    }

    function openPrizeBspecExpDialog(context, exp, and_apply = true, display_bonus_precent)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["PrizeDialog"];
        if (page != nil)
            return page["openPrizeAspecExpDialog"](context, [exp, and_apply, display_bonus_precent]);
    }

    function openPrizeMoneyDialog(context, money, and_apply = true, display_bonus_precent, visible_trophies)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["PrizeDialog"];
        if (page != nil)
            return page["openPrizeMoneyDialog"](context, [money, and_apply, display_bonus_precent, visible_trophies]);
    }
    
    function closePrizeDialog(context)
    {
        if (!main.defined(DIALOG_PROJECT))
            return false;

        var page = main::dialog_project["PrizeDialog"];
        if (page != nil)
            page["ForceClose"](context);
        return true;
    }
}