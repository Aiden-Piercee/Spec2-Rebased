

//---------------------------------------------------------------------------------------
// SettingUtil.ad
//
// Utility module for checking car settings
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------
module SettingUtil
{
    module RESULT
    {
        static ERROR_SUCCESS = 0;
        static ERROR_CANT_USE = 1;
        static ERROR_NEXT_ORDER = 2;
        static ERROR_HAVE_ALREADY = 3;
        static ERROR_PREV_ORDER = 4;
        static ALERT_UNSET = 5;
    }

    function setParts(cp, parts_type, category)
    {
        cp.beginPartsInfo();

        if (parts_type == gtengine::CarPartsType::SUPERCHARGER)
            cp.setParts(gtengine::CarPartsType::TURBINEKIT, 0);
        else if (parts_type == gtengine::CarPartsType::TURBINEKIT)
            cp.setParts(gtengine::CarPartsType::SUPERCHARGER, 0);

        var res = cp.setParts(parts_type, category);
        if (parts_type == gtengine::CarPartsType::FRONT_TIRE)
        {
            var type_rear = gtengine::CarPartsType["REAR_TIRE"];
            res = cp.setParts(type_rear, category);
        }
        
        cp.endPartsInfo();

        return res;
    }

    function validate(cp, parts_type, category)
    {
        cp.beginPartsInfo();
        var result = validateImpl(cp, parts_type, category);
        cp.endPartsInfo();
        return result;
    }

    function validateImpl(cp, parts_type, category)
    {
        if (!checkExist(cp, parts_type, category))
            return RESULT::ERROR_CANT_USE;

        if (checkHaving(cp, parts_type, category))
            return RESULT::ERROR_HAVE_ALREADY;

        if (!checkOrder(cp, parts_type, category))
            return RESULT::ERROR_NEXT_ORDER;

        if (!checkOrderPrev(cp, parts_type, category))
            return RESULT::ERROR_PREV_ORDER;

        if (!checkUnsetAlart(cp, parts_type, category))
            return RESULT::ALERT_UNSET;

        return RESULT::ERROR_SUCCESS;
    }

    function checkOrder(cp, parts_type, category)
    {
        if (!gtengine::MSpecDB::isOrderedType(parts_type))
            return true;

        var current_category = cp.getParts(parts_type);
        if (-1 == current_category)
        {
            return 1 == category || cp.isExistParts(parts_type, category) && !cp.isExistParts(parts_type, category - 1);
        }

        return category == current_category + 1;
    }

    function checkOrderPrev(cp, parts_type, category)
    {
        if (!gtengine::MSpecDB::isOrderedType(parts_type))
            return true;

        var current_category = cp.getParts(parts_type);
        if (current_category == -1)
            return true;

        return category > current_category;
    }

    function checkUnsetAlart(cp, parts_type, category)
    {
        if (parts_type == gtengine::CarPartsType::TURBINEKIT)
        {
            var current_category = cp.getParts(gtengine::CarPartsType::SUPERCHARGER);
            if (current_category != -1)
                return false;
        }
        else if (parts_type == gtengine::CarPartsType::SUPERCHARGER)
        {
            var current_category = cp.getParts(gtengine::CarPartsType::TURBINEKIT);
            if (current_category != -1 && current_category != 0)
                return false;
        }

        return true;
    }

    function checkExist(cp, parts_type, category)
    {
        var is_kart = gtengine::MSpecDB::checkGenericFlag("is_racing_kart", cp.getCarCode());
        if (is_kart)
        {
            if (parts_type == gtengine::CarPartsType::FRONT_TIRE)
                return false;
        }

        return cp.isExistParts(parts_type, category);
    }

    function checkHaving(cp, parts_type, category)
    {
        var res = true;
        if (parts_type == gtengine::CarPartsType::BONNET)
        {
            var current_category = cp.getParts(gtengine::CarPartsType::BONNET);
            if (current_category != -1 && current_category != category)
                res = false;
        }

        var result = res && cp.isHavingParts(parts_type, category);
        if (result && parts_type == gtengine::CarPartsType::FRONT_TIRE)
        {
            if (cp.getCarLabel() == "racing_kart_125_sp_xx")
            {
                if (category != cp.getParts(parts_type))
                    result = false;
            }
        }
        return result;
    }
}
