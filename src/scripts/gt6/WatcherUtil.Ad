

//---------------------------------------------------------------------------------------
// WatcherUtil.ad
//
// Utility module for watching scripts (?)
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------
module WatcherUtil
{
    function Create(context, func, interval)
    {
        var watcher = main::menu::MScriptWatcher(context, func);
        if (interval == nil)
            interval = 1;

        watcher.interval = interval;
        watcher.append();
        return watcher;
    }

    function Delete(watcher)
    {
        if (watcher != nil)
            watcher.remove();
    }

    class Suspender
    {
        attribute current;
        attribute prev;
        attribute count;

        method __init__(_suspend = false)
        {
            self.current = _suspend;
            self.prev = _suspend;
            self.count = 0;
        }

        method isSuspend()
        {
            return self.current;
        }

        method Suspend()
        {
            if (self.count <= 0)
            {
                self.prev = nil;
                self.prev = self.current;
                self.current = nil;
                self.current = true;
            }

            self.count++;
        }

        method Resume()
        {
            self.count--;

            if (self.count <= 0)
            {
                self.current = nil;
                self.current = self.prev;
            }
        }
    }
}
