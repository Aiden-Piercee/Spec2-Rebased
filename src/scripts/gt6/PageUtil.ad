

//---------------------------------------------------------------------------------------
// PageUtil.ad
//
// Utility module for pages
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------
module PageUtil
{
    static sInvisiblePages = [:];

    method invisibleOtherPages(context, root)
    {
        visibleInvisiblePages(context, root);
        sInvisiblePages[root.name] = [];

        foreach (var page in context.getPageList())
        {
            if (root != page && page.visible)
            {
                page.visible = false;
                sInvisiblePages[root.name].push(page);
            }
        }
    }

    method invisibleUnderPages(context, root)
    {
        visibleInvisiblePages(context, root);
        sInvisiblePages[root.name] = [];

        foreach (var page in context.getPageList())
        {
            if (root == page)
                break;

            if (page.visible)
            {
                page.visible = false;
                sInvisiblePages[root.name].push(page);
            }
        }
    }

    method visibleInvisiblePages(context, root)
    {
        if (sInvisiblePages[root.name] != nil)
        {
            foreach (var page in sInvisiblePages[root.name])
                page.visible = true;

            sInvisiblePages.erase(root.name);
        }
    }

    method visibleOtherPages(context, root)
    {
        visibleInvisiblePages(context, root);
    }

    method visibleUnderPages(context, root)
    {
        visibleInvisiblePages(context, root);
    }
}
