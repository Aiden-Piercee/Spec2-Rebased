static module main
{
    module main::QuickRaceEvent
    {
        static end_flg;

        function onGamePause(context, pause, is_online)
        {
            end_flg = true;
        }
    }

    // This module does not normally exist
    // Stripped by debug
    // Added it, but it's missing some stuff, not functional either
    // This is used by race_behavior - Nenkai
    module main::SupportMenu
    {
        static organizer;
        static course_changed = true;
        static car_changed = true;

        function initialize(ORG)
        {
            organizer = ORG;
        }

        function launch()
        {
            // reload_script
            // allstar
            // allstar1
            // race
            // replay
            // replay_d
            // autodemo
            // bspec

            return "race";
        }

        function getSoundDynamicRange()
        {
            return 0;
        }

        function getCourseMapType()
        {
            return 0;
        }

        function getMultiMonitorInfo()
        {
            var is_available = 0; // 1 or 0
            var layout_index = 0;
            var frame_border = 0;
            var round_angle = 0;
            var view_angle = 0;

            return [is_available, layout_index, frame_border, round_angle, view_angle];
        }

        function getPenaltyScript()
        {
            return nil;
        }

        function getAIScript()
        {
            return nil;
        }
        
        function isCourseChanged()
        {
            var res = course_changed;
            course_changed = false;
            return res;
        }

        function isCarChanged()
        {
            var res = car_changed;
            car_changed = false;
            return res;
        }

        function getRaceParameter()
        {
            var gp = GameParameterUtil::createTimeAttack(gtengine::MSpecDB::getCourseCode("tsukuba"));
            return gp.event.race_parameter;
        }

        function investigateDB()
        {

        }

        function beginTelemetryDraw()
        {

        }

        function endTelemetryDraw()
        {

        }
        
        function finalize()
        {

        }
    }

    function MainLoop()
    {
        GAME_STATUS.user_profile.option.display_margin_hd = 0;   
        GAME_STATUS.user_profile.option.apply();

        main::SupportMenu::investigateDB();
        main::SupportMenu::initialize(ORG);
        main::RaceOperator.allocateResource();


        while (!GameSequence::context.finished && !pdiext::MSystemCondition::IsExitGame())
        {
            if (GameSequence::getCurrentSequence() == GameSequence::MENU)
                LoadMenuResource();
            else
                UnloadMenuResource();

            switch (GameSequence::getCurrentSequence())
            {
                case GameSequence::MENU:
                    GameSequence::setNextSequence(GameSequence::BEHAVIOR);
                    break;

                case GameSequence::BEHAVIOR:
                    GameSequence::setMode(GameSequence::getCurrentSequence());
                    GameSequence::executeRace();
                    break;
            }
        }

        main::RaceOperator.destroyRace();
        LaunchRaceUtil::clearResource();
        main::SupportMenu::finalize();
    }
}