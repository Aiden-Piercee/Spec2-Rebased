

//---------------------------------------------------------------------------------------
// GarageUtil.ad
//
// Utility module for managing garage thumbnails.
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------
module GarageUtil
{
    module Thumbnail
    {
        module Type
        {
            static Garage = "garage";
            static Stockyard = "stockyard";
            static Status = "status";
        }

        module Size
        {
            static L = "L";
            static S = "S";
        }

        function removeAll()
        {
            var dir = "/APP_DATA/car/%08x".format(pdiapp::play_id);
            pdistd::RemoveDirectory(dir, true);
        }

        function getPath(garage_id, thumb_type, thumb_size)
        {
            var file_extension = GetVersionBranch() != "demo" ? "png" : "img";
            return "/APP_DATA/car/%08x/%s/%s/%08x.%s".format(pdiapp::play_id, thumb_type, thumb_size, garage_id, file_extension);
        }

        function getPath2(car_label, car_color, thumb_type, thumb_size)
        {
            if (car_color == nil)
                car_color = 0;

            var file_extension = GetVersionBranch() != "demo" ? "png" : "img";
            return "/APP_DATA/car/%08x/%s/%s/%s_%02d.%s".format(pdiapp::play_id, thumb_type, thumb_size, car_label, car_color, file_extension);
        }

        function copy(src_type, src_garage_id, dst_type, dst_garage_id)
        {
            foreach (var size in [Size::L, Size::S])
            {
                var src_path = getPath(src_garage_id, src_type, size);
                var dst_path = getPath(dst_garage_id, dst_type, size);

                pdistd::MakeDirectoryForFile(dst_path);
                var res = pdistd::RenameFile(src_path, dst_path);
                res != pdistd::FileError::OK; // Not used
            }
        }

        function capture(context, sceneface, garage_id, cp, type)
        {
            var enable_stereo_rendering = ORG.getEnableStereoRendering();
            if (!GAME_STATUS.user_profile.option.monitor_use_parallax_view)
                ORG.setEnableStereoRendering(false);

            ThumbnailUtil::captureSettings(context, sceneface);

            foreach (var size in [Size::L, Size::S])
            {
                var path = getPath(garage_id, type, size);
                ThumbnailUtil::captureIcon(context, sceneface, cp, size, path);
            }

            ThumbnailUtil::captureFinalize(context, sceneface);

            if (!GAME_STATUS.user_profile.option.monitor_use_parallax_view)
                ORG.setEnableStereoRendering(enable_stereo_rendering);
        }

        function copyForStatus(garage_id, category)
        {
            var src = getPath(garage_id, Type::Garage, Size::L);
            var dst = getPathForStatus(category);

            if (!pdistd::Exist(src))
            {
                pdistd::RemoveFile(dst);
                return;
            }

            pdistd::MakeDirectoryForFile(dst);
            pdistd::CopyFile(src, dst);
        }

        function getPathForStatus(category)
        {
            var file_extension = GetVersionBranch() != "demo" ? "png" : "img";
            return "/APP_DATA/car/%08x/%s/%s.%s".format(pdiapp::play_id, Type::Status, "max_%{category}", file_extension);
        }

        function copyForVoucher(garage_id, car_label, color)
        {
            foreach (var size in [Size::S, Size::L])
            {
                var src = "/car/thumbnail_%s/%s_%02d.png".format(size, car_label, color);
                var dst = getPath(garage_id, Type::Garage, size);

                pdistd::MakeDirectoryForFile(dst);
                pdistd::CopyFile(src, dst);
            }
        }
    }
}