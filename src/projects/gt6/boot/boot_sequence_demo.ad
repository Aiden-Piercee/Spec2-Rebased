












function boot_sequence_demo(context)
{
    boot_sequence_common(context, "demo");
}

function CopyList(src, dest)
{
    for (var i = 0; i < dest.size; i++)
    {
        dest[i] = i < src.size ? src[i] : main::gtengine::MSpecDB::NO_CODE;
    }
}

function ApplyLimitCarList(limit_list, car_list)
{
    var code_list = [];
    foreach (var car in car_list)
    {
        var code = gtengine::MSpecDB::getCarCode(car);
        if (code != gtengine::MSpecDB::NO_CODE)
            code_list.push(code);
    }
    CopyList(code_list, limit_list);
}

function ApplyLimitCourseList(limit_list, course_list)
{
    var code_list = [];
    foreach (var car in course_list)
    {
        var code = gtengine::MSpecDB::getCourseCode(car);
        if (code != gtengine::MSpecDB::NO_CODE)
            code_list.push(code);
    }
    CopyList(code_list, limit_list);
}

function display_sequence_demo(context, pc, initialize_thread)
{
    presents_sequence_common(context);


    while (!boot_state.sequence_done)
        yield;

    
    if (boot_state.is_new_game)
    {
        var option = GAME_STATUS.user_profile.option;
        option.display_margin_hd = 0;
        option.display_margin_hd_adjust_done = true;
        option.kiosk_mode = true;
        option.visible_icon_singlerace = true;
        option.visible_icon_timetrial = true;

        var def_limit_car_list = [
            "huayra_11", 
            "focus_st_13", 
            "karma_ecosport_12", 
            "cizeta_v16t_94_prm",
            "z8_01",
            "_507_57",
            "abarth_1500_biposto_bertone_52",
            "r8_lms_ultra_12",
            "z4_gt3_11",
            "sls_amg_gt3_11",
            "gtr_nismo_gt3_13",
            "x_bow_r_12",
            "corvette_c7_14",
            "tesla_model_s_sig_perf_12",
            "tz3_stradale_11",
            "quattro_s1_86",
            "rocket_07",
            "countach_lp400_74_prm",
            "alpine_a110_1600s_68",
            "dino_246gt_69",
            "_458_italia_09",
            "acura_nsx_91",
            "ford_gt_06",
            "mp4_12c_10",
            "toyota_86_12",
            "weider_hsv_010_11"
        ];

        option.kiosk_limit_car = true;
        option.setLimitCars(def_limit_car_list);
        option.kiosk_limit_democar = true;
        option.setLimitDemoCars(def_limit_car_list);

        var garage = main::GAME_STATUS.user_profile.garage;
        foreach (var car_label in def_limit_car_list)
        {
            var cp = gtengine::MCarParameter(car_label);
            cp.setNewCar();
            var garage_id = garage.addCar(cp);
            ThumbnailUtil::copyThumbnailFromPieceToAppData(car_label, cp.color, garage_id);
            if (garage.getRidingGarageId() == gtengine::MSpecDB::NO_CODE)
                garage.rideCar(garage_id);
        }

        var def_limit_course_list = [
            "mount_panorama"
        ];
        option.kiosk_limit_course = true;
        option.setLimitCourses(def_limit_course_list);
        option.kiosk_limit_democourse = true;
        option.setLimitDemoCourses(def_limit_course_list);

        TutorialUtil::done("gttop", "complete");
    }
    applySaveData();
}

function start_project_demo(context)
{
    SequenceUtil::startProject(context, "gtmode");
}