













main::GameSequence::setNextProject("dev_boot");
main::after_boot_project = "dev_runviewer";

module main::StaticConfig
{
    static movie_player_time_to_inactive = 3;
    static race_replay_pause_enable = true;
    static race_spectator_pause_enable = true;
    static race_leave_demo_pause_enable = false;
    static user_bgm_enable = true;
    static use_trophy_system = true;
    static omedeto_test_index = 1;

    static WEATHER_SUNNY = 0;
    static WEATHER_RAINY = 1;
    static WEATHER_CLOUDY = 2;
    static WEATHER_SUNNY_RAINY = 3;
    static WEATHER_RAINY_SUNNY = 4;
    static WEATHER_SUNNY_RAINY_SUNNY = 5;
    static WEATHER_RAINY_SUNNY_RAINY = 6;
}

module main::GlobalValue
{
    static NOT_SHOW_ERROR_EVEN_IF_CARLIST_NOT_FOUND = false;
    static now_recording = false;
}

module main::BranchStatus
{
    function clearInitializer()
    {
        undef CreateStructure;
        undef Initialize;
        undef clearInitializer;
    }

    function CreateStructure()
    {
        var st = STStructure("Impl");
        main::BranchStatus.defineModule(st);
        st.define("current_course", STString(64));
        st.define("current_course_path", STString(128));
        st.define("course_layout_no", STInt());
        st.define("current_race_code", STString(64));
        st.define("current_event", STString(64));
        st.define("leavedemo_repeat_times", STInt());
        st.define("player_pos", STInt());
        st.define("split_window_num", STInt());
        st.define("game_parameter", STObject(main::gtengine::MGameParameter));
        st.define("race_parameter", STObject(main::gtengine::MRaceParameter));
        st.define("driver_parameter", STObject(main::gtengine::MCarDriverParameter));
        st.define("auto_drive", STByte());
        st.define("shuffle_params", STArray(STArray(STInt(), 2), 4));
        st.define("shuffle_player_num", STInt());
        st.define("use_memory_with_entries", STInt());
        st.define("suspension_front", STInt());
        st.define("suspension_rear", STInt());
        st.define("ride_height_front", STInt());
        st.define("ride_height_rear", STInt());
        st.define("quicktune_power", STInt());
        st.define("quicktune_weight", STInt());
        st.define("race_maker_class", STInt());
        st.define("race_maker_ai_level", STInt());
        st.define("race_maker_tire", STInt());
        st.define("race_maker_tuning_type", STInt());
        st.define("race_maker_boost_level", STInt());
        st.define("race_maker_penalty", STInt());
        st.define("race_maker_laps", STInt());
        st.define("race_maker_grid", STInt());
        st.define("race_maker_prize", STArray(STInt(), 16));
        st.define("same_enemy", STByte());
        st.define("enemy_type", STInt());
        st.define("enemy_bspec_lv", STInt());
        st.define("show_meters", STByte());
        st.define("ss_second", STInt());
        st.define("demo_car_index", STInt());
        st.define("demo_camera_target_random", STByte());
        st.define("movie_output", STByte());
        st.define("movie_framedata_output", STByte());
        st.define("movie_pilot_framedata_output", STByte());
        st.define("movie_body_parts_framedata_output", STByte());
        st.define("movie_start_frame", STInt());
        st.define("movie_end_frame", STInt());
        st.define("movie_use_blur", STByte());
        st.define("movie_subframes", STInt());
        st.define("movie_60fps_rate", STInt());
        st.define("movie_car_noise_type", STInt());
        st.define("movie_nocar_disp", STByte());
        st.define("movie_audio_out", STByte());
        st.define("movie_audio_out_surround", STByte());
        st.define("movie_depth_out", STByte());
        st.define("movie_use_parallax", STByte());
        st.define("movie_parallax_mode", STInt());
        st.define("movie_renderer_mode", STInt());
        st.define("directory_no", STInt());
        st.define("directory_name", STString(256));
        st.define("directory_name_devfs", STString(256));
        st.define("mov_file_type", STInt());
        st.define("backmirror_off", STInt());
        st.define("camera_type", STInt());
        st.define("camera_type_no", STInt());
        st.define("mov_world_camera_ebc", STString(256));
        st.define("mov_car_camera_ebc", STString(256));
        st.define("race_edit_dir", STString(256));
        st.define("online_autodrive", STByte());
        st.define("online_matchalone", STByte());
        st.define("special_driver_model_id", STInt());
        st.define("camera_set_no", STInt());
        st.define("force_incar", STInt());
        st.define("use_replay_incar_cut", STByte());
        st.define("eneble_full_replay_camera_", STByte());
        st.define("language", STByte());
        st.define("shopping_cart", STArray(STString(128), 16));
        st.define("recording_video_type", STInt());
        st.define("recording_audio_type", STInt());
        st.define("upload_video_title", STString(64));
        st.define("upload_video_desc", STString(1024));
        st.define("upload_video_kwd_0", STString(24));
        st.define("upload_video_kwd_1", STString(24));
        st.define("upload_video_kwd_2", STString(24));
        st.define("eula_currver", STInt());
        st.define("vibration_large", STInt());
        st.define("vibration_small", STInt());
        st.define("vibration_duration", STInt());
        st.define("drift_endless", STByte());
        st.define("patch_driver_name", STString(64));
        st.define("enable_spark", STByte());
        st.define("editing_game_parameter_path", STString(128));
        st.define("weather_type", STByte());
        st.define("driver_body", STInt());
        st.define("driver_head", STInt());
        st.define("driver_body_color", STInt());
        st.define("driver_head_color", STInt());
        
        DefineMethod();
        return st;
    }

    function Initialize(instance)
    {
        instance.current_course = "nurburgring_GP";
        instance.current_course_path = "";
        instance.course_layout_no = 0;
        instance.current_race_code = "none";
        instance.current_event = "none";
        instance.leavedemo_repeat_times = 0;
        instance.player_pos = 0;
        instance.split_window_num = 2;
        instance.game_parameter = main::gtengine::MGameParameter();
        instance.race_parameter = main::gtengine::MRaceParameter();
        instance.driver_parameter = main::gtengine::MCarDriverParameter();
        instance.driver_parameter.setPlayer(0);
        instance.auto_drive = false;
        instance.shuffle_params = [ [0, 0], [0, 0], [0, 0], [0, 0] ];
        instance.shuffle_player_num = 1;
        instance.use_memory_with_entries = false;
        instance.suspension_front = 0;
        instance.suspension_rear = 0;
        instance.ride_height_front = 0;
        instance.ride_height_rear = 0;
        instance.quicktune_power = 0;
        instance.quicktune_weight = 0;
        instance.race_maker_class = 0;
        instance.race_maker_ai_level = 0;
        instance.race_maker_tire = 6;
        instance.race_maker_tuning_type = 0;
        instance.race_maker_boost_level = 0;
        instance.race_maker_penalty = 0;
        instance.race_maker_laps = 1;
        instance.race_maker_grid = 15;
        instance.race_maker_prize[0] = 30000;
        instance.race_maker_prize[1] = 20000;
        instance.race_maker_prize[2] = 15000;
        instance.race_maker_prize[3] = 10000;
        instance.race_maker_prize[4] = 9500;
        instance.race_maker_prize[5] = 9000;
        instance.race_maker_prize[6] = 8500;
        instance.race_maker_prize[7] = 8000;
        instance.race_maker_prize[8] = 7500;
        instance.race_maker_prize[9] = 7000;
        instance.race_maker_prize[10] = 6000;
        instance.race_maker_prize[11] = 5000;
        instance.race_maker_prize[12] = 4000;
        instance.race_maker_prize[13] = 3000;
        instance.race_maker_prize[14] = 2000;
        instance.race_maker_prize[15] = 1000;
        instance.same_enemy = true;
        instance.enemy_type = main::gtengine::EnemyListType::ONLY_PREMIUM;
        instance.enemy_bspec_lv = 0;
        instance.show_meters = 2;
        instance.ss_second = 3600;
        instance.demo_car_index = 0;
        instance.demo_camera_target_random = 0;
        instance.movie_renderer_mode = 0;
        instance.directory_no = 0;
        instance.directory_name = "";
        instance.directory_name_devfs = "";
        instance.mov_file_type = 0;
        instance.backmirror_off = 0;
        instance.force_incar = 0;
        instance.use_replay_incar_cut = true;
        instance.eneble_full_replay_camera_ = false;
        instance.camera_type = -1;
        instance.camera_type_no = -1;
        instance.mov_world_camera_ebc = "";
        instance.mov_car_camera_ebc = "";
        instance.race_edit_dir = "none";
        instance.movie_output = false;
        instance.movie_framedata_output = false;
        instance.movie_pilot_framedata_output = false;
        instance.movie_body_parts_framedata_output = false;
        instance.movie_start_frame = -1;
        instance.movie_end_frame = -1;
        instance.movie_use_blur = true;
        instance.movie_subframes = 32;
        instance.movie_60fps_rate = 100;
        instance.movie_car_noise_type = 0;
        instance.movie_nocar_disp = false;
        instance.movie_audio_out = false;
        instance.movie_audio_out_surround = false;
        instance.movie_depth_out = false;
        instance.movie_use_parallax = false;
        instance.movie_parallax_mode = 3;
        instance.online_autodrive = false;
        instance.camera_set_no = -1;

        var str_lang = main::pdistd::MLocale::getLanguage();
        var lang = main::pdistd::Language[str_lang];
        instance.language = lang;

        for (var i = 0; i < instance.shopping_cart.size; i++)
            instance.shopping_cart[i] = "";

        instance.recording_video_type = 576;
        instance.recording_audio_type = 0;
        instance.upload_video_title = nil;
        instance.upload_video_desc = nil;
        instance.upload_video_kwd_0 = nil;
        instance.upload_video_kwd_1 = nil;
        instance.upload_video_kwd_2 = nil;
        instance.eula_currver = 0;
        instance.vibration_large = 100;
        instance.vibration_small = 100;
        instance.vibration_duration = 100;
        instance.drift_endless = false;
        instance.patch_driver_name = "";
        instance.enable_spark = true;
        instance.editing_game_parameter_path = "";
        instance.weather_type = StaticConfig::WEATHER_SUNNY;
        instance.driver_body = 0;
        instance.driver_head = 0;
        instance.driver_body_color = 0;
        instance.driver_head_color = 0;
    }

    function SetDefault()
    {
        setup();
    }

    function DefineMethod()
    {
        module Impl
        {
            method apply()
            {
                if (CheckVersion::Test(36627))
                    ORG.enable_spark = self.enable_spark;
            }
        }
    }

    function set_car_to_garage(cp)
    {
        var garage = main::GAME_STATUS.user_profile.garage;
        while (true)
        {
            var carlist = garage.getCarList();
            if (carlist.size == 0)
                break;

            var garage_id = carlist[0][0];
            garage.removeCar(garage_id);
        }

        var garage_id = garage.addCar(cp);
        garage.rideCar(garage_id);
    }

    function setup()
    {
        set_car_to_garage(gtengine::MCarParameter("_458_italia_09"));
        
        var option = main::GAME_STATUS.user_profile.option;
        option.autodemo_time_limit = 0;
        option.autodemo_time_limit_max = 0;
        option.display_margin_hd = 0;

        main::GAME_STATUS.branch.race_parameter.start_type = main::gtengine::StartType::GRID;
        main::GAME_STATUS.branch.race_parameter.entry_max = 1;
        main::GAME_STATUS.branch.race_parameter.race_limit_laps = 0;
        main::GAME_STATUS.config.no_instant_replay = true;
        main::GAME_STATUS.config.no_quick = true;
        main::GAME_STATUS.config.TA_before_online_battle = false;
        main::GAME_STATUS.config.no_replay_menu = false;

        option.menu_bgm_volume = 0;
        option.race_bgm_volume = 0;
        option.replay_bgm_volume = 0;
        option.apply();

        1 + 1 + 1; // ??
    }

    function saveRunviewer(context)
    {
        var data = SaveDataUtilGT6::getGT6GameForSave(context, context.getRootWindow().project);
        data.title = "総合プレビュー";
        data.subtitle = "総合プレビューのセーブデータです";
        data.description = "user:[" + main::pdiext::MSystemConfiguration::GetOSDUserName() + "]." 
            + "\nVer. " + pdiext::MProductInformation::GetDisplayVersion();
        data.iconPngName = "icon/runviewer/game_icon.png";
        data.bgPngName = "icon/runviewer/game_bg.png";

        var use_tsm = pdistd::GetHeapAllocateMax().toInt() < (32 * 1024 * 1024);
        var success = SaveDataUtil::save(context, data, use_tsm);
    }
}