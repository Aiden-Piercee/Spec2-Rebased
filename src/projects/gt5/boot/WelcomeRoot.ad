













module WelcomeRoot
{
    attribute event_loop;
    attribute sFunc;

    method open(context, func)
    {
        self.sFunc = func;

        SequenceUtil::startPage(context, ROOT);
        self.event_loop = menu::EventLoop(context);
        self.event_loop.enter();
    }

    method close(context)
    {
        if (self.event_loop != nil)
        {
            SequenceUtil::setupTransition(context, context.getCursorProject().ColorTransition);
            context.pageOutRootTransition();
            context.syncOutRootTransition();
            context.closePage(ROOT);
            self.event_loop.leave();
            self.event_loop = nil;
            BootProjectUtil::DispatchNextSequence(context);
        }
    }

    method onInitialize(context)
    {
        if (GetVersionBranch() == "academy")
        {
            Message::label.visible = false;
            Message::labelAcademy.visible = true;
        }
        else
        {
            Message::label.visible = true;
            Message::labelAcademy.visible = false;
        }

        var progress = pdistd::MProgress();
        progress.constant_progress_speed = 1.0 / 27.0;
        Progress::bar.progress = progress;
        context.pushEvent(main::menu::MScriptEvent(context, ROOT, "on_initialize"));
    }

    method on_initialize(context)
    {
        self.sFunc(context, Progress::bar.progress);
        close(context);
    }

    method onFinalize(context)
    {
        
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        return EVENTRESULT_FILTER;
    }
}