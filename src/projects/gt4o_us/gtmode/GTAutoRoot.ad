











module GTmodeProject::GTAutoRoot
{
    Wash::bg.actor = main::menu::MChaseActor(Wash::bg);
    Oil::bg.actor = main::menu::MChaseActor(Oil::bg);
    Wheel::bg.actor = main::menu::MChaseActor(Wheel::bg);
    Wing::bg.actor = main::menu::MChaseActor(Wing::bg);

    function onInitialize(context)
    {
        enterPage(context, ROOT, "GTAutoTitle");

        if (main::game.garage.hasRidingCar())
        {
            CarFace.car_garage = main::game.garage.riding_car;
            CarFace.action_type = "normal";
            CarFace.quality_level = 0;
            CarFace.syncLoading();
            CarFace.car_model.motion = 2;
            CarFace.loadModelSet("image/gtmode/gtauto/pitmanFix.mdl");
            CarFace.loadModelOptionMotion("image/gtmode/gtauto/gtauto_entrance_cam.mot");
            CarFace.loadModelMotion("image/gtmode/gtauto/GTAutoEntranceMotion.mot", 0, 1);
            CarFace.car_model.playModelMotion();
            CarFace.car_model.setModelMotionLoop(0);
        }

        CarFace.car_model.tx = -0.1;
        CarFace.car_model.tz = 0.0;
        CarFace.car_model.ry = 0.0;
        CarFace.car_model.warp();
    }

    function onFinalize(context)
    {
        leavePage(context, ROOT);
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        set_last_focus("GTAuto");
        start_page(context, TopRoot);

        return STATE_YIELD;
    }
}

module GTmodeProject::GTAutoRoot::Wash
{
    function onFocusEnter(context)
    {
        bg.actor.doStart();
        return STATE_YIELD;
    }

    function onFocusLeave(context)
    {
        bg.actor.doStop();
        return STATE_YIELD;
    }

    function onActivate(context)
    {
        main::sound.play("ok");
        start_page(context, CarWashRoot);
        return STATE_YIELD;
    }
}

module GTmodeProject::GTAutoRoot::Oil
{
    function onFocusEnter(context)
    {
        bg.actor.doStart();
        return STATE_YIELD;
    }

    function onFocusLeave(context)
    {
        bg.actor.doStop();
        return STATE_YIELD;
    }

    function onActivate(context)
    {
        main::sound.play("ok");
        start_page(context, OilChangeRoot);
        return STATE_YIELD;
    }
}

module GTmodeProject::GTAutoRoot::Wheel
{
    function onFocusEnter(context)
    {
        bg.actor.doStart();
        return STATE_YIELD;
    }

    function onFocusLeave(context)
    {
        bg.actor.doStop();
        return STATE_YIELD;
    }

    function onActivate(context)
    {
        if (!sureNoSuspended(context, 0))
            return STATE_YIELD;

        if (main::game.garage.riding_car.isChangeWheelDisabled())
        {
            main::sound.play("disable");
            var name = main::game.garage.riding_car.name;

            openConfirmDialog(context, 2, context.translate(ROOT, "this car cannot change wheels").format(name));
            return STATE_YIELD;
        }

        main::sound.play("ok");
        context.pushPage(WheelPopup);
        return STATE_YIELD;
    }
}

module GTmodeProject::GTAutoRoot::Wing
{
    function onFocusEnter(context)
    {
        bg.actor.doStart();
        return STATE_YIELD;
    }

    function onFocusLeave(context)
    {
        bg.actor.doStop();
        return STATE_YIELD;
    }

    function onActivate(context)
    {
        if (!sureNoSuspended(context, 0))
            return STATE_YIELD;

        if (main::game.garage.riding_car.isChangeWingDisabled())
        {
            main::sound.play("disable");
            var name = main::game.garage.riding_car.name;

            openConfirmDialog(context, 2, context.translate(ROOT, "this car cannot change a wing").format(name));
            return STATE_YIELD;
        }

        main::sound.play("ok");
        start_page(context, WingShopRoot);
        return STATE_YIELD;
    }
}