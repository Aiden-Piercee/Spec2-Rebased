






module ModalTemplate
{
    attribute popup;
    attribute closed;

    // Method that opens the modal.
    // Add arguments to this method to be used for the modal. 
    method open(context)
    {
        self.closed = false;

        /* Uncomment this to make the cursor not visible for the modal. */
        // var cursor_visible = context.cursor_visible;
        // context.cursor_visible = false;

        self.popup = main::SequenceUtil::ModalPage(context, ModalTemplate);

        /* Uncomment this to restore the cursor to visible for the modal. */
        // context.cursor_visible = cursor_visible;

        self.popup.open();
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
    }

    method abort(context)
    {
        close(context);
        
    }

    // Initialize widget data for the modal here.
    method onInitialize(context)
    {
        
    }

    // Clean up widgets here.
    method onFinalize(context)
    {

    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        self.close(context);
        return EVENTRESULT_FILTER;
    }
}