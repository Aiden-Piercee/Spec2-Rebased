














static MpegRoot = "main";

if (main::menu::MSystem::GetRegionCode() == "uk")
    MpegRoot = "main_pal";

static StartProject = "boot";
main::game.major_menu_project = "";

MemoryDebug_address = 0x7FFFFFFF;
MemoryDebug_size = 0x7FFFFFFF;
MemoryDebug_count = -1;

#include "language.h"

switch (main::menu::MSystem::GetRegionCode())
{
    case "jp":
        UsingLanguages.push("JP");
        break;

    case "uk":
        UsingLanguages.push("GB");
        UsingLanguages.push("FR");
        UsingLanguages.push("DE");
        UsingLanguages.push("IT");
        UsingLanguages.push("ES");
        break;

    case "us":
        UsingLanguages.push("US");
        break;

    case "tw":
        UsingLanguages.push("TW");
        break;

    case "kr":
        UsingLanguages.push("KR");
        break;

    case "cn":
        UsingLanguages.push("CN");
        break;
}

static UsingLanguageNum = UsingLanguages.size;
static DemonstrationSlideNum = 62;

#include "demo.h"

static DemoList;
static DemonstrationFiles;

if (main::menu::MSystem::GetRegionCode() == "uk")
{
    DemonstrationFiles = [
        "Rdemo0p",
        "Rdemo1p",
        "Rdemo2p",
        "Rdemo3p",
        "Rdemo4p",
        "Rdemo5p",
        "Rdemo6p",
        "Rdemo7p",
        "Rdemo8p",
        "Rdemo9p",
        "Rdemo10p",
    ];

    DemoList = [
        Demo(2, DemonstrationFiles[0]),
        Demo(2, DemonstrationFiles[1]),
        Demo(2, DemonstrationFiles[2]),
        Demo(2, DemonstrationFiles[3]),
        Demo(2, DemonstrationFiles[4]),
        Demo(2, DemonstrationFiles[5]),
        Demo(2, DemonstrationFiles[6]),
        Demo(2, DemonstrationFiles[7]),
        Demo(2, DemonstrationFiles[8]),
        Demo(2, DemonstrationFiles[9]),
        Demo(2, DemonstrationFiles[10]),
    ];
}
else
{
    DemonstrationFiles = [
        "Rdemo0",
        "Rdemo1",
        "Rdemo2",
        "Rdemo3",
        "Rdemo4",
        "Rdemo5",
        "Rdemo6",
        "Rdemo7",
        "Rdemo8",
        "Rdemo9",
        "Rdemo10",
        "Rdemo11",
        "Rdemo12",
    ];

    if (main::menu::MSystem::GetRegionCode() == "kr" || 
        main::menu::MSystem::GetRegionCode() == "cn")
    {
        DemonstrationFiles[4] = "Rdemo4k";
        DemonstrationFiles[5] = "Rdemo5k";
        DemonstrationFiles[7] = "Rdemo7k";
        DemonstrationFiles[10] = "Rdemo10k";
    }
   
    DemoList = [
        Demo(2, DemonstrationFiles[0]),
        Demo(2, DemonstrationFiles[1]),
        Demo(2, DemonstrationFiles[2]),
        Demo(2, DemonstrationFiles[3]),
        Demo(2, DemonstrationFiles[4]),
        Demo(2, DemonstrationFiles[5]),
        Demo(2, DemonstrationFiles[6]),
        Demo(2, DemonstrationFiles[7]),
        Demo(2, DemonstrationFiles[8]),
        Demo(2, DemonstrationFiles[9]),
        Demo(2, DemonstrationFiles[10]),
        Demo(2, DemonstrationFiles[11]),
        Demo(2, DemonstrationFiles[12]),
    ];
}

main::game.demonstration.initialize(DemoList.size, 150, 3);

#include "bgmplaylist.h"

function last_strap()
{
    main::game.option.setGameZoneDefault();
    main::game.money = 10000;

    init_bgmplaylist();
}

// Sets up the adhoc pool allocators.
// These statics get picked up by the engine. "Release" will be picked in retail builds
// The one that get chosen depends of the starting project (which is stored in the save)

/* Project to allocator:
 *   "gtmode" = 0 (HugeAllocatorRelease)
 *   "option/setting" = 1 (LargeAllocatorRelease)
 *   "labomode" = 2 (SmallAllocatorRelease)
 *   "photo_save/print" = 3 (TinyAllocatorRelease)
*/

// Note: Each array must match 20 values in release.
// Each value is the size of one pool (or chunk?).

static HugeAllocatorDebug = [
    9968,
    8667,
    5495,
    2052,
    46455,
    49215,
    8888,
    16361,
    1353,
    20130,
    1025,
    3774,
    188,
    30,
    393,
    261,
    30,
    1191,
    30,
    929,
    1953,
    272,
    30,
    44,
    30,
    41,
    153,
    30,
    30,
    33,
    30,
    56,
    30,
    30,
    30,
    906,
    30,
    30,
    30,
    30,
    33,
    32,
    30,
    234,
    30,
    1542,
    30,
    825,
    30,
    104,
    30,
    30,
    30,
    30,
    30,
    30,
    335,
    30,
    30,
    30,
    30,
    1866,
    30,
    678,
    63,
    30,
    30,
    2669,
    30,
    0,
    30,
    3512,
    0,
    30,
    30,
    30,
    30,
    30,
    30,
    90,
    30,
    30,
    30,
    30,
    30,
    0,
    30,
    200,
    0,
    30,
];

static HugeAllocatorRelease = [
    9965,
    15090,
    39630,
    9441,
    11666,
    12323,
    20895,
    11057,
    1253,
    30,
    54,
    3368,
    330,
    30,
    1133,
    426,
    30,
    30,
    30,
    849,
    65,
    30,
    36,
    30,
    207,
    30,
    30,
    30,
    30,
    47,
    30,
    32,
    30,
    30,
    30,
    62,
    30,
    30,
    30,
    30,
    32,
    63,
    30,
    1386,
    30,
    650,
    30,
    74,
    30,
    30,
    30,
    60,
    30,
    30,
    78,
    30,
    30,
    30,
    30,
    1532,
    30,
    30,
    56,
    1314,
    30,
    30,
    30,
    252,
    30,
    1413,
    30,
    30,
    0,
    30,
    30,
    30,
    30,
    180,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    0,
    30,
    30,
    0,
    30,
];

static LargeAllocatorDebug = [
    3515,
    2642,
    4241,
    2529,
    15584,
    22299,
    4739,
    7172,
    587,
    6786,
    578,
    5618,
    30,
    30,
    83,
    168,
    30,
    497,
    56,
    1416,
];

static LargeAllocatorRelease = [
    3444,
    4868,
    15650,
    8258,
    5697,
    10578,
    7214,
    5685,
    773,
    78,
    30,
    5481,
    87,
    30,
    476,
    165,
    30,
    30,
    60,
    1416,
];

static SmallAllocatorDebug = [
    3036,
    1850,
    2046,
    1092,
    10835,
    14514,
    1340,
    3105,
    285,
    4950,
    390,
    1928,
    30,
    30,
    68,
    38,
    30,
    411,
    30,
    396,
];

static SmallAllocatorRelease = [
    2936,
    2952,
    8817,
    3512,
    2523,
    5066,
    4769,
    2504,
    563,
    30,
    30,
    1593,
    48,
    30,
    387,
    42,
    30,
    30,
    30,
    396,
];

static TinyAllocatorDebug = [
    1406,
    846,
    618,
    360,
    4799,
    4110,
    1100,
    1176,
    161,
    2303,
    270,
    675,
    30,
    30,
    30,
    30,
    30,
    179,
    30,
    165,
];

static TinyAllocatorRelease = [
    1406,
    1380,
    3786,
    1143,
    1347,
    1667,
    2339,
    999,
    297,
    30,
    30,
    609,
    50,
    30,
    168,
    30,
    30,
    30,
    30,
    164,
];