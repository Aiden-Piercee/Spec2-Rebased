




main::game.option.game_zone = "JP";

main::game.max_entry = 1;

main::menu::MRunViewer::setRaceDebugFlag(0, 0);
main::menu::MRunViewer::setRaceDebugFlag(1, 0);
main::menu::MRunViewer::setRaceDebugFlag(2, 0);
main::menu::MRunViewer::setRaceDebugFlag(3, 0);

static driver_debug = false;
static auto_drive = false;
static number_of_laps = 0;
static work_meter_output = false;
static debug_print = true;
static pitin_test_mode = false;
static driver_test_name = "";
static RidingForm = false;
static tandem = false;
static optimize = true;

static quick_tune_weight_level = 100;
static quick_tune_power_level = 100;
static quick_tune_tire_type = 0;

static player_car_tire = "";
static player_car_wheel = "";
static player_car_wing = "";
static player_car_decken_number = 0;
static player_car_decken_color = 0;
static player_car_decken_kind = -1;
static player_car_muffler = 0;

static replayLap_ = 1;
static frameDiv_ = 16;
static frameRate_ = 60;
static shutterRate_ = 80;
static outCarMask_ = false;
static outCoordinate_ = false;
static outEnvMap_ = false;
static outImage_ = true;
static outCubeMap_ = false;
static useVisionList_ = true;
static useDefocus_ = true;
static envHireso_ = true;
static renderCar_ = true;
static renderCourse_ = true;
static renderSky_ = true;
static renderEffect_ = true;
static renderTire_ = true;
static halfSpeed_ = false;
static setRotSpeed_ = false;
static suddenRender_ = false;
static hiSpeedMode_ = false;
static interlaceMode_ = false;
static interlaceShapen_ = 60;
static hiresoMode_ = true;
static useMenuModel_ = false;
static cameraPathOnly_ = false;
static cubeBlur_ = true;
static forcePlayerColor_ = -1;
static courseReload_ = false;
static photoDiv_ = 4;
static panelSimple_ = false;
static playerRank_ = 1;

static renderDirNo_ = false;

static driver_list = [
    "",
    "testdriver01",
    "testdriver02",
    "testdriver03",
    "testdriver04",
    "testdriver05",
    "testdriver06",
    "testdriver07",
    "testdriver08",
    "testdriver09",
    "testdriver10",
    "testdriver11",
    "testdriver12",
    "testdriver13",
    "testdriver14",
    "testdriver15",
    "testdriver16",
    "e3rider00",
    "e3rider01",
    "e3rider02",
    "e3rider03",
    "e3rider04",
    "e3rider05",
    "e3rider06",
    "e3rider07",
    "e3rider08",
    "e3rider09",
    "e3rider10",
    "e3rider11",
];

class EnemyCarLimit
{
    attribute name;
    attribute count;

    method __init__(nm, n)
    {
        name = nm;
        count = n;
    }
}

static entry_car_limit_by_car = [];
static entry_car_limit_by_course = [];

entry_car_limit_by_car.push(EntryCarLimit("prowler_01", 2))
entry_car_limit_by_car.push(EntryCarLimit("fairlady_z_roadster_03", 2))
entry_car_limit_by_car.push(EntryCarLimit("_350z_roadster_03", 2))
entry_car_limit_by_car.push(EntryCarLimit("mtr_gmv_04", 2))
entry_car_limit_by_car.push(EntryCarLimit("drivercar01", 2))
entry_car_limit_by_car.push(EntryCarLimit("drivercar02", 2))
entry_car_limit_by_car.push(EntryCarLimit("drivercar03", 2))

entry_car_limit_by_course.push(EnemyCarLimit("assisi", 1));
entry_car_limit_by_course.push(EnemyCarLimit("grandcanyon", 1));
entry_car_limit_by_course.push(EnemyCarLimit("grandcanyon_north", 1));
entry_car_limit_by_course.push(EnemyCarLimit("paris_rally", 1));
entry_car_limit_by_course.push(EnemyCarLimit("nur_snow", 1));

function get_entry_car_max(car, course)
{
    var max = 6;
    for (var i = 0; i < entry_car_limit_by_car; i++)
    {
        if (entry_car_limit_by_car[i].name == car)
        {
            if (max > entry_car_limit_by_car[i].count)
                max = entry_car_limit_by_car[i].count;
        }
    }

    for (var i = 0; i < entry_car_limit_by_course; i++)
    {
        if (entry_car_limit_by_course[i].name == course)
        {
            if (max > entry_car_limit_by_course[i].count)
                max = entry_car_limit_by_course[i].count;
        }
    }

    return max;
}

static MpegRoot = "main"; // Picked by engine

if (main::menu::MSystem::GetRegionCode() == "uk")
    MpegRoot = "main_pal";

static StartProject = "boot"; // Picked by engine
main::game.major_menu_project = "";

static FillCarAndMoneyOnBoot = true;
static DownloadSourceMFS = true;

#include "language.h"

switch (main::menu::MSystem::GetRegionCode())
{
    case "jp":
        main::network.language = "JP";
        UsingLanguages.push("JP");
        break;

    case "uk":
        main::network.language = "GB";
        UsingLanguages.push("GB");
        UsingLanguages.push("FR");
        UsingLanguages.push("DE");
        UsingLanguages.push("IT");
        UsingLanguages.push("ES");
        break;

    case "us":
        main::network.language = "US";
        UsingLanguages.push("US");
        break;

    case "tw":
        main::network.language = "US";
        UsingLanguages.push("TW");
        break;

    case "kr":
        main::network.language = "US";
        UsingLanguages.push("KR");
        break;

    case "cn":
        main::network.language = "US";
        UsingLanguages.push("CN");
        break;
}

static UsingLanguageNum = UsingLanguages.size; // Picked by engine

#include "bgmplaylist.h"

function last_strap()
{
    switch (main::menu::MSystem::GetRegionCode())
    {
        case "jp":
            main::game.option.entrance_addr = "gt4online-muis.scej-online.jp";
            main::game.option.entrance_port = 10071;
            break;

        case "us":
            main::game.option.entrance_addr = "gt4-pubeta.muis.pdonline.scea.com";
            main::game.option.entrance_port = 10071;
            break;

        case "uk":
            main::game.option.entrance_addr = "GT4.online.scee.com";
            main::game.option.entrance_port = 10080;
            break;
    }

    main::game.option.setGameZoneDefault();
    main::game.money = 100000000;

    init_bgmplaylist();
}

static CONFIG_ENABLE_ONLINE = true;

// Not used in release builds
MemoryDebug_address = 0x7FFFFFFF; 
MemoryDebug_size = 0x7FFFFFFF;
MemoryDebug_count = -1;

static LanBattle_RaceResultStartDelayForLoser = 20;
static NetBattle_RaceResultStartDelayForLoser = 15;
static NetBattle_TimeTrial_TimeLimit = 60 * 60;
static VoiceChat_Playback_Volume = 80;

if (main::menu::MSystem::GetRegionCode() == "uk")
    VoiceChat_Playback_Volume = 100;

static ProfileNicknameCondition = 0;
static ProfileLocationCondition = 0;
static KickOutThreasholdAvg = 500;
static KickOutThreasholdMin = 65;
static KickOutThreasholdMax = 500;
static ShowDebugInfoOnNetObject = false;
static NotifyNewInfoNews = false;
static NotifyNewInfoQA = false;
static NotifyNewInfoTC = false;
static NotifyNewInfoPR = false;
static NotifyNewInfoTA = false;