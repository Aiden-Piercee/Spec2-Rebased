import main::*;

// Grab our context
var context = manager.getUpdateContext().getRenderContext(0); // 1 is left side (player 1), 2 is right side (player 2)

var progress = pdistd::MProgress();
progress.value = 0.0;

// Define cancellation bool
static abort = false;

DialogUtil::setProgress(context, progress);
DialogUtil::setProgressRawMode(context, true);
DialogUtil::setProgressCancelCB(context, function(context) 
{
    // Code executed when user presses circle
    abort = true;
});

DialogUtil::openProgressDialog(context, "Example", "Message when success", "Message when failed", async function (context, args)
{
    var max = 10000;
    for (var i = 0; i <= max; i++)
    {
        progress.value = (i + 1).toFloat() / max;
        DialogUtil::setProgressLabel(context, "%d / %d".format(i, max));

        if (abort)
            return [false, true];

        // Not necessary but here anyway
        yield;
    }

    // Return value is [success, autoclose]
    return [true, true];
});